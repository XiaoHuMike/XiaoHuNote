(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{315:function(t,i,n){"use strict";n.r(i);var e=n(14),g=Object(e.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git命令"}},[t._v("#")]),t._v(" Git命令")]),t._v(" "),i("p",[i("a",{attrs:{href:"https://xiaohumike.github.io/vue-test/#/login?redirect=%2Fdashboard",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://xiaohumike.github.io/vue-test/#/login?redirect=%2Fdashboard"),i("OutboundLink")],1),t._v("\ngit push -u origin master -f 把本地仓库强制覆盖更新远程仓库")]),t._v(" "),i("p",[t._v('配置签入代码的用户名邮箱 --global 对所有仓库生效\ngit config --global user.name "Your Name"\ngit config --global user.name "Your Name"\ngit config --global http.sslverify false')]),t._v(" "),i("p",[t._v("工作区 本地文件目录\n暂存区（中间区域 stage）\n本地仓库（git init创建的仓库）")]),t._v(" "),i("p",[t._v("改完代码后，\ngit add 到暂存区\ngit commit 到 本地仓库\ngit push 到githib远程仓库")]),t._v(" "),i("p",[t._v("git ls-files 查看暂存区内容")]),t._v(" "),i("p",[t._v("创建仓库\n1.本地创建空目录 git init 本地创建空仓库，会在目录下创建.git文件夹\n2.从github上克隆 git clone 仓库地址")]),t._v(" "),i("p",[t._v("提交文件\n1.git add 文件名/./"),i("em",[t._v(".txt 添加到暂存区，等待commit .指的是add所有文件")]),t._v(".txt所有txt文件\n2.git commit -m “备注” 提交到本地仓库\n也可以直接 git commit -am “备注” 跳过gitadd，直接提交仓库\n3.git log 查看提交记录")]),t._v(" "),i("p",[t._v("回退本地仓库到某个版本 ：\ngit reset --soft 回退版本的ID 回退到某个版本 保留工作区+暂存区\n--hard 都不保留\n--mixed 保留1 丢弃2")]),t._v(" "),i("p",[t._v("查看差异 具体参数百度 一般用工具\ngit diff 默认查看工作区和暂存区的差异")]),t._v(" "),i("p",[t._v("删除文件\n1.从本地工作目录删除文件\n2.git add 文件名/. 从暂存区删除\n3.git commit -m “备注”\n2)\n1.git rm 文件名/. 从本地+暂存区一起删除\n2.git rm 文件名/. --cached 从暂存区删除。保留本地\n2.git commit -m “备注”")]),t._v(" "),i("p",[t._v("gitignore 忽略某些文件，不进行版本控制")]),t._v(" "),i("p",[t._v("远程仓库绑定本地仓库：\n1.git clone 仓库地址 ：自动绑定\n2.\ngit remote add <远程仓库别名，一般是origin> <远程仓库地址>\ngit remote -v 查看本地仓库关联的远程仓库\ngit push <远程仓库名> <本地分支>:<远程分支> 推送文件到远程仓库")]),t._v(" "),i("p",[t._v("远程仓库推送和更新：\ngit push  <远程仓库名> <分支> ：本地仓库推送到githib远程仓库\ngit pull <远程仓库名>  <分支> 拉取更新内容")]),t._v(" "),i("p",[t._v("分支：\ngit branch <分支名> 创建分支\ngit switch <分支名> 切换分支\ngit merge <目标分支> 在当前分支下执行\ngit push <目标远程仓库名> <目标远程分支> 当前分支推送到目标仓库的目标分支，若无远程分支，则自动创建远程分支\n删除本地分支 git branch -d 分支名 -d表示删除已合并的分支 -D表示强制删除分支\n删除远程分支  git push origin --delete <远程分支名>")])])}),[],!1,null,null,null);i.default=g.exports}}]);